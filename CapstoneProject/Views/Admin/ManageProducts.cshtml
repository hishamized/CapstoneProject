@model IEnumerable<CapstoneProject.Models.Product>

<div class="max-w-7xl mx-auto p-6 bg-gray-800 rounded-lg shadow-lg"
     x-data="{ showModal: false, showDeleteModal: false, product: {} }">

    <h1 class="text-3xl font-bold mb-6 text-red-500">Manage Products</h1>

    <!-- Success/Error Messages -->
    @if (TempData["Success"] != null)
    {
        <div class="bg-green-600 text-white p-3 rounded mb-4">@TempData["Success"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="bg-red-600 text-white p-3 rounded mb-4">@TempData["Error"]</div>
    }

    <table class="min-w-full border-collapse border border-gray-700 text-gray-200">
        <thead>
            <tr class="bg-gray-900">
                <th class="border border-gray-600 px-4 py-2">ID</th>
                <th class="border border-gray-600 px-4 py-2">Name</th>
                <th class="border border-gray-600 px-4 py-2">Description</th>
                <th class="border border-gray-600 px-4 py-2">Price</th>
                <th class="border border-gray-600 px-4 py-2">Stock</th>
                <th class="border border-gray-600 px-4 py-2">Category</th>
                <th class="border border-gray-600 px-4 py-2">Is Active</th>
                <th class="border border-gray-600 px-4 py-2">Images</th>
                <th class="border border-gray-600 px-4 py-2">Created At</th>
                <th class="border border-gray-600 px-4 py-2">Updated At</th>
                <th class="border border-gray-600 px-4 py-2">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model)
            {
                <tr class="hover:bg-gray-700">
                    <td class="border border-gray-600 px-4 py-2">@product.Id</td>
                    <td class="border border-gray-600 px-4 py-2">@product.Name</td>
                    <td class="border border-gray-600 px-4 py-2">@product.Description</td>
                    <td class="border border-gray-600 px-4 py-2">@product.Price.ToString("0.00")</td>
                    <td class="border border-gray-600 px-4 py-2">@product.StockQuantity</td>
                    <td class="border border-gray-600 px-4 py-2">@product.Category?.Name</td>
                    <td class="border border-gray-600 px-4 py-2">@product.IsActive</td>
                    <td class="border border-gray-600 px-4 py-2 space-y-1">
                        @if (product.Images != null && product.Images.Any())
                        {
                            @foreach (var img in product.Images)
                            {
                                <a href="@img.ImageUrl" target="_blank" class="text-blue-400 underline block">@img.ImageUrl</a>
                            }
                        }
                    </td>
                    <td class="border border-gray-600 px-4 py-2">@product.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td class="border border-gray-600 px-4 py-2">@product.UpdatedAt.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td class="border border-gray-600 px-4 py-2 space-x-2">
                        <!-- Edit Button -->
                        <button class="bg-yellow-500 text-black px-3 py-1 rounded my-2"
                                x-on:click="
                                        product = JSON.parse($el.dataset.product);
                                        showModal = true;
                                    "
                                data-product='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(product))'>
                            Edit
                        </button>

                        <!-- Delete Button -->
                        <button class="bg-red-500 text-white px-3 py-1 rounded my-2"
                                @@click="showDeleteModal = true; product = { Id: '@product.Id', Name: '@product.Name' }">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Edit Modal -->
    <div x-show="showModal" x-cloak class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-gray-800 p-6 rounded-lg w-2/3 max-h-[90vh] overflow-y-auto">
            <h2 class="text-xl font-bold text-red-500 mb-4">Edit Product</h2>
            <form asp-controller="Admin" asp-action="UpdateProduct" method="post" enctype="multipart/form-data">
                <input type="hidden" name="Id" x-model="product.Id" />

                <div class="mb-3">
                    <label class="block text-sm text-gray-300">Name</label>
                    <input type="text" name="Name" x-model="product.Name"
                           class="w-full px-3 py-2 rounded bg-gray-700 text-gray-200 border border-gray-600" />
                </div>

                <div class="mb-3">
                    <label class="block text-sm text-gray-300">Description</label>
                    <textarea name="Description" x-model="product.Description"
                              class="w-full px-3 py-2 rounded bg-gray-700 text-gray-200 border border-gray-600"></textarea>
                </div>

                <div class="mb-3">
                    <label class="block text-sm text-gray-300">Price</label>
                    <input type="number" step="0.01" name="Price" x-model="product.Price"
                           class="w-full px-3 py-2 rounded bg-gray-700 text-gray-200 border border-gray-600" />
                </div>

                <div class="mb-3">
                    <label class="block text-sm text-gray-300">Stock Quantity</label>
                    <input type="number" name="StockQuantity" x-model="product.StockQuantity"
                           class="w-full px-3 py-2 rounded bg-gray-700 text-gray-200 border border-gray-600" />
                </div>

                <div class="mb-3">
                    <label class="block text-sm text-gray-300">Category</label>
                    <select name="CategoryId" x-model="product.CategoryId"
                            class="w-full px-3 py-2 rounded bg-gray-700 text-gray-200 border border-gray-600">
                        <option value="">-- Select Category --</option>
                        @foreach (var cat in ViewBag.Categories)
                        {
                            <option value="@cat.Id">@cat.Name</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label class="block text-sm text-gray-300">Is Active</label>
                    <select name="IsActive" x-model="product.IsActive"
                            class="w-full px-3 py-2 rounded bg-gray-700 text-gray-200 border border-gray-600">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                </div>

                <!-- Existing Images -->
                <div class="mb-3">
                    <label class="block text-sm text-gray-300">Existing Images</label>
                    <template x-for="(img, index) in product.Images" :key="index">
                        <div class="flex items-center space-x-2 mb-1">
                            <a :href="img.ImageUrl" target="_blank" class="text-blue-400 underline" x-text="img.ImageUrl"></a>
                            <label class="flex items-center space-x-1">
                                <input type="checkbox" :name="'deleteImages[' + index + ']'" :value="img.Id" class="h-4 w-4" />
                                <span class="text-gray-300 text-sm">Delete</span>
                            </label>
                        </div>
                    </template>
                </div>

                <!-- Add New Images -->
                <div class="mb-3">
                    <label class="block text-sm text-gray-300">Add More Images</label>
                    <input type="file" name="NewImages" multiple class="text-gray-200" />
                </div>

                <div class="flex justify-end space-x-2">
                    <button type="button" class="px-4 py-2 bg-gray-600 text-white rounded" @@click="showModal = false">Cancel</button>
                    <button type="submit" class="px-4 py-2 bg-red-500 text-white rounded">Save</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div x-show="showDeleteModal"
         x-cloak
         class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-gray-800 p-6 rounded-lg w-1/3">
            <h2 class="text-xl font-bold text-red-500 mb-4">Confirm Delete</h2>
            <p class="mb-4 text-gray-200">
                Are you sure you want to delete product "<span x-text="product.Name"></span>"?
            </p>
            <div class="flex justify-end space-x-2">
                <button type="button"
                        class="px-4 py-2 bg-gray-600 text-white rounded"
                        @@click="showDeleteModal = false">
                    Cancel
                </button>
                <form asp-controller="Admin"
                      asp-action="DeleteProduct"
                      method="post"
                      class="inline">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="Id" x-model="product.Id" />
                    <button type="submit"
                            class="px-4 py-2 bg-red-500 text-white rounded">
                        Delete
                    </button>
                </form>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
